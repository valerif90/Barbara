{"version":3,"sources":["components/Common/Preloader/preloader.gif","components/Dialogs/Message/Message.module.css","components/Navbar/Navbar.module.css","components/Settings/Settings.module.css","serviceWorker.js","redux/sidebar_reducer.js","api/api.js","redux/profile_reducer.js","redux/dialogs_reducer.js","redux/users_reducer.js","redux/auth_reducer.js","redux/redux_store.js","validators/validators.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Common/Preloader/Preloader.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Common/FormsControls/FormsControls.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Settings/Settings.jsx","components/Friends/Friends.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/User/User.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Common/Paginator/Paginator.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/User/User.module.css","components/Users/Users.module.css","components/Common/Paginator/Paginator.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","sidebarReducer","state","instance","axios","create","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","posts","id","message","likesCount","profile","setStatus","type","profileReducer","action","newPost","newPostText","dialogs","name","avatar","messages","dialogsReducer","body","newMessageBody","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","user","_id","followed","filter","login","isAuth","setAuthUserData","payload","authReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","maxLength","Header","props","className","s","header","src","height","div","loginBlock","onClick","logout","to","HeaderContainer","this","React","Component","connect","getAuthUserData","Navbar","nav","item","activeClassName","active","Preloader","preloader","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileInfo","width","photoUrl","Post","required","Textarea","input","meta","hasError","touched","error","styles","formControl","Input","maxLength10","length","MyPosts","memo","postsElements","p","createRef","AddNewPostFormRedux","onSubmit","values","addPost","reduxForm","handleSubmit","Field","component","placeholder","validate","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","getUserProfile","WithUrlDataContainerComponent","withRouter","Settings","Friends","Message","User","dialog","AddMessageFormRedux","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","sendMessage","sendMessageCreator","Paginator","pagesCount","Math","ceil","pages","i","push","selectedPages","onPageChanged","Users","key","container","userPhoto","alt","disabled","some","fullName","getUsersSuperSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","bind","page","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","App","path","render","exact","DialogsContainer","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.651fb0c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.cd2b8065.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Message_content__1vTbk\",\"dialogs\":\"Message_dialogs__2BZUu\",\"dialogsItems\":\"Message_dialogsItems__3BxQb\",\"active\":\"Message_active__3KMb1\",\"dialog\":\"Message_dialog__2b2b-\",\"messages\":\"Message_messages__11r0A\",\"message\":\"Message_message__1MOXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Settings_content__3FxpE\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import axios from 'axios';\n\n\nconst instance = axios.create({\n    //withCredentials: true\n    baseURL: 'http://localhost:4000/'\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10)  {\n        return instance.get(`users?page=${currentPage}&limit=${pageSize}`)\n        .then(response => {\n            return response.data\n        });\n     },\n     follow(userId) {\n        return instance.post(`follow?page=${userId}`)\n     },\n     unfollow(userId) {\n        return instance.delete(`follow?page=${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsilete method. Please use profileAPI object');\n        return profileAPI.getProfile(userId);\n            \n    }\n\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`users/5eebe26c0c8aab1de464a98b` /*+ userId*/);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/5eebe26c0c8aab1de464a98b` /*+ userId*/);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\n\n\n","import {profileAPI, usersAPI} from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: '1', message: 'Hi', likesCount: '15'},\r\n        {id: '2', message: 'Hello', likesCount: '20'},\r\n        {id: '3', message: 'Yo', likesCount: '20'},\r\n        {id: '4', message: 'Moove', likesCount: '20'}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE : {\r\n            return {\r\n                ...state, \r\n                profile: action.profile\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId)\r\n            .then(response => {   \r\n            dispatch(setUserProfile(response.data));\r\n            })\r\n}\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n            .then(response => {\r\n            dispatch(setStatus(response.data));\r\n            })\r\n}\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setStatus(status));\r\n                }\r\n            })\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: '1',\r\n            name: 'Nastya',\r\n            avatar: ''\r\n        },\r\n        {id: '2', name: 'Vika', avatar: 1},\r\n        {id: '3', name: 'Sveta', avatar: 2}\r\n    ],\r\n    messages: [\r\n        {id: '1', message: 'Hi'},\r\n        {id: '2', message: 'Hello'},\r\n        {id: '3', message: 'How are you'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\nexport default dialogsReducer;","import {usersAPI} from '../api/api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 2,\r\n    totalUsersCount: 4,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user._id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user._id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(_id => _id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage:currentPage });\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));    \r\n        dispatch(setUsers(data.users))\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod (userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.follow.bind(usersAPI);\r\n        followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n        followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from '../api/api';\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: {userId, email, login, isAuth} });\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let {_id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(_id, login, email, true));\r\n        }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n                dispatch(stopSubmit('login', {_error: message}));\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport sidebarReducer from './sidebar_reducer';\r\nimport profileReducer from './profile_reducer';\r\nimport dialogsReducer from './dialogs_reducer';\r\nimport usersReducer from './users_reducer';\r\nimport authReducer from './auth_reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","export const required = value => {\n    if (value) return  undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => value => {\n    if (value && value.length > maxLength) return `Error: max length is ${maxLength} symbols!`;\n    return undefined;\n}","import React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://prestonvill.ru/common/uploads/images/Post/barbara-palvin-yarkij-natural-soft-drama-victoria-s-secret-barbara-palvin-tipazh-kibbi-top-model-podium-stil-yarkogo-naturala-obrazy%2041.jpg\" height={100}/>\r\n            <div className={s.div}>Barbara's Sait</div>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ?\r\n                    <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                : <NavLink to={'/login'}>LOGIN</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport getAuthUserData, {logout} from '../../redux/auth_reducer';\r\nimport {authAPI} from '../../api/api';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render () {\r\n    return <Header {...this.props} />\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth, \r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect (mapStateToProps, {getAuthUserData, logout}) (HeaderContainer);","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n// let classes = {\r\n//     'nav': 'Navbar_nav__1WUpx',\r\n//     'item': 'Navbar_item__GKRGb'\r\n//      'active':  'blablabla active'\r\n// }\r\n\r\n\r\n// 'item active';\r\n// let c1 = 'item';\r\n// let c2 = 'active';\r\n// let classes = c1 + ' ' + c2;\r\n// let classesNew = `${s.item} ${s.active}`;\r\n\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/friends\" activeClassName={s.active}>Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\nimport preloader from './preloader.gif'\n\nlet Preloader = () => {\n    return <div>\n        <img src={preloader}/>\n    </div>\n}\n\nexport default Preloader","import React, {useEffect, useState} from \"react\";\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        // this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span onClick={ activateEditMode }>{props.status || '---'}</span>\r\n                    </div>\r\n                }\r\n                { editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                               value={status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <img src=\"https://i.gifer.com/APw5.gif\" width={500}/>\r\n        <div>\r\n            <img src={props.profile.photoUrl} />\r\n            <ProfileStatusWithHooks status={'Hello!!!'}/>\r\n            // status=props.status updateStatus=props.updateStatus\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n        return (\r\n        <article>\r\n            <div className='item'>{props.message}, {props.likesCount}</div>\r\n            <span>likes</span>\r\n        </article>\r\n    )\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\nimport styles from './FormsControls.module.css';\n\nexport const Textarea = ({input, meta, ...props}) => {\n\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : ' ')}>\n            <div>\n            <textarea {...input} {...props} />\n            </div>\n            { hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\n\nexport const Input = ({input, meta, ...props}) => {\n\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : ' ')}>\n            <div>\n                <input {...input} {...props} />\n            </div>\n            { hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>New post</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n    <div className={s.posts}>\r\n        {postsElements}\r\n    </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newPostText'} component={Textarea} placeholder={'Post you message'}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'addNewPostForm'}) (AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {updateStatus} from \"../../redux/profile_reducer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\nimport Profile from './Profile'\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {getStatus, getUserProfile, updateStatus} from '../../redux/profile_reducer'\nimport { withRouter } from \"react-router-dom\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount () {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render () {\n    return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                     updateStatus={this.props.updateStatus} />\n        )\n    }\n};\n\nlet AuthRedirectComponent = (props) => {\n    return <ProfileContainer {...props} />\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status:state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\nlet WithUrlDataContainerComponent = withRouter (AuthRedirectComponent);\n\nexport default connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}) (WithUrlDataContainerComponent);","import React from \"react\";\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport s from './Friends.module.css'\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div>\r\n            Friends\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './User.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props._id}>{props.avatar} {props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport User from \"./User/User\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <User name={d.name} id={d._id} avatar={d.avatar} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={'textarea'} name={'newMessageBody'} placeholder={'enter message'}/>\r\n        </div>\r\n        <div>\r\n            <button>Add dialog</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'}) (AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {sendMessageCreator} from '../../redux/dialogs_reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n        dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    // withAuthRedirect\r\n)(Dialogs);","import React from \"react\";\nimport styles from './Paginator.module.css';\n\nconst Paginator = (props) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n        \n\n    return <div className={styles.pages}>\n            {pages.map(p => {\n                return <span className={props.currentPage === p && styles.selectedPages}\n                        onClick={() => {props.onPageChanged(p)}}>{p}</span>\n                    })}\n        </div>\n    }\n\nexport default Paginator;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from './Users.module.css';\nimport axios from 'axios';\nimport { usersAPI } from \"../../api/api\";\nimport Paginator from \"../Common/Paginator/Paginator\";\n\nlet Users = (props) => {\n\n    return (\n            <div>\n\n                <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\n                           totalUsersCount={props.totalUsersCount} pageSize={props.pageSize} />\n\n                {\n                    props.users.map(user => <div key={user._id}>\n                        <div className={styles.container}>\n                    <span>\n                        <div>\n                            <NavLink to={'/profile/' + user._id}>\n                            <img\n                                src={user.photoUrl != \" \" ? user.photoUrl : \"https://i.pinimg.com/originals/76/47/9d/76479dd91dc55c2768ddccfc30a4fbf5.png\"}\n                                className={styles.userPhoto} alt=\"\"/>\n                            </NavLink>\n                        </div>\n                        <div>\n                            {user.followed\n                                ? <button disabled={props.followingInProgress\n                                    .some(_id => _id === user._id)}\n                                     onClick={() => {props.unfollow(user._id) }}>unfollow</button>\n\n                                : <button disabled={props.followingInProgress.some(_id => _id === user._id)}\n\n                                    onClick={() => {props.follow(user._id) }}>follow</button>}\n                        </div>\n                    </span>\n                            <span>\n                        <span>\n                            <div>{user.fullName}</div>\n                        </span>\n                        <span>\n                            <div>{user._id}</div>\n                        </span>\n                    </span>\n                        </div>\n                    </div>)\n                }\n            </div>\n        )\n    }\n\nexport default Users","import {createSelector} from \"reselect\";\n\nexport const getUsers = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsersSelector = (state) => {\n    return getUsers(state).filter(users => true);\n}\n\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\n    return users.filter(users => true);\n})\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\n\n","import React from 'react';\r\nimport Users from './Users';\r\nimport {connect} from 'react-redux';\r\nimport {follow, setCurrentPage, unfollow, toggleFollowingProgress, requestUsers} from '../../redux/users_reducer';\r\nimport axios from 'axios';\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport { usersAPI } from '../../api/api';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSuperSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n    render() { \r\n        \r\n        return <> {this.props.isFetching ? <Preloader /> : null}\r\n        <Users totalUsersCount={this.props.totalUsersCount} \r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      onPageChanged={this.onPageChanged}\r\n                      users={this.props.users}\r\n                      follow={this.props.follow}\r\n                      unfollow={this.props.unfollow}\r\n                      followingInProgress={this.props.followingInProgress} /> </>\r\n        }\r\n            \r\n    }\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// };\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        // users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\n\r\nexport default connect (mapStateToProps, {follow, unfollow, setCurrentPage, \r\n     toggleFollowingProgress, requestUsers}) (UsersContainer);","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../Common/FormsControls/FormsControls\";\nimport {required} from \"../../validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from '../../redux/auth_reducer';\nimport Redirect from \"react-router-dom\";\nimport styles from '../Common/FormsControls/FormsControls.module.css'\n\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <Field placeholder={'email'} name={'email'}\n                           validate={[required]}\n                           component={Input}/>\n                </div>\n                <div>\n                    <Field placeholder={'password'} name={'password'} type={'password'}\n                           validate={[required]}\n                           component={Input}/>\n                </div>\n                <div>\n                    <Field  name={'rememberMe'} type={'checkbox'} component={Input}/> remember me\n                </div>\n                {error && <div className={styles.formSummaryError}>\n                    {error}\n                </div>}\n                <div>\n                    <button>login</button>\n                </div>\n            </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm ({ form: 'login' } )(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    // if (props.isAuth) {\n    //     return <Redirect to={'/profile'}/>\n    // }\n\n    return (\n        <div>\n            <h1>LOGIN</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps, {login}) (Login);","import React from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport Settings from './components/Settings/Settings';\nimport Friends from './components/Friends/Friends';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport Login from \"./components/Login/Login\";\nimport {authAPI} from \"./api/api\";\n\n\n\nclass App extends React.Component {\n\n\n    componentDidMount () {\n        authAPI.me()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    let {_id, login, email} = response.data.data;\n                    this.props.setAuthUserData(_id, email, login);\n                }\n            })\n        // this.props.getAuthUserData();\n    }\n\n\n    render() {\n\n    return (\n        <div className='container'>\n                <HeaderContainer />\n                <section>\n                    <Navbar/>\n                    <div className='container_content'>\n                        <Route path='/profile/:userId?' render={ () => <ProfileContainer /> }/>\n                        <Route exact path='/dialogs' render={ () => <DialogsContainer /> }/>\n                        <Route path='/settings' component={Settings}/>\n                        <Route path='/friends' component={Friends}/>\n                        <Route path='/users' render={ () => <UsersContainer /> }/>\n                        <Route path='/login' render={ () => <Login /> }/>\n                    </div>\n                </section>\n            </div>\n        )\n    }\n};\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux_store\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\n    ReactDOM.render(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n            <App />\n            </Provider>\n        </BrowserRouter>,\n        document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__ajVyF\",\"error\":\"FormsControls_error__35B8G\",\"formSummaryError\":\"FormsControls_formSummaryError__3e7lO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"div\":\"Header_div__X5wUp\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__1VIii\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"User_content__6_31B\",\"dialogs\":\"User_dialogs__2ssZV\",\"dialogsItems\":\"User_dialogsItems__2bkXD\",\"active\":\"User_active__2n5JZ\",\"dialog\":\"User_dialog__kbTy9\",\"messages\":\"User_messages__p4aMc\",\"message\":\"User_message__DpP6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17MJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPages\":\"Paginator_selectedPages__2FcsM\",\"pages\":\"Paginator_pages__1-rF3\"};"],"sourceRoot":""}